---
import { Image } from "astro:assets";
import teamData from "../data/teamData";
import mainCourseData from "../data/mainCourseData";
import LinkButton from "./LinkButton.astro";

import { supabase } from "../lib/supabase";

const { firstName } = Astro.props;


let { data: Members, error:membersError } = await supabase
  .from('Members')
  .select('*, specs:Specialisations!inner(*), courses:Courses!inner(*)')
  .eq('firstName', `${firstName}`)
  .maybeSingle()

// let {data: Courses, error:coursesError} = await supabase
// .from('Courses')
// .select('*, members:Members!inner(*)')
// .eq('members.firstName', `${firstName}`)
          
if (membersError) {
  console.error(membersError);
  throw membersError;
}

// if (coursesError) {
//   console.error(coursesError);
//   throw coursesError;
// }

console.log(Members);
// console.log(Courses);
---


    <ul class="list-disc list-inside">{Members?.specs.map((specs)=>(
      <li>{specs.name}</li>
    ))}</ul>
    <ul class="list-disc list-inside">{Members?.courses.filter(course => course.favorite).map((course)=>(
      <li>{course.name}</li>
    ))}</ul>


{
  teamData
    .filter((member) => member.firstName?.includes(firstName))
    .map((member) => (
      <div class="p-12 flex flex-col gap-4 items-start text-left text-xl border border-slate-200 bg-slate-50 rounded">
        <div class="flex flex-row items-center gap-4">
          <Image
            src={member.img}
            alt=`Profielfoto ${member.firstName}`
            width="64"
            height="64"
            class="rounded-full border border-slate-200 grayscale"
          />
          <h2 class="text-3xl font-bold">{member.firstName}&nbsp;{member.lastName}</h2>
        </div>
        <div class="flex flex-col gap-0">
        {member.courses.map((course) => (
            <p>{course}</p>
        ))}
        </div>
        <div class="flex flex-col gap-0">
            <p class="font-bold">Specialisaties:</p>
            <ul class="list-disc list-inside">
                {member.specialisations.map((specialisation) => (
                    <li>{specialisation}</li>
                ))}
            </ul> 
        </div>
        <p>
            Een detail van de gevolgde cursussen van {member.firstName}, <button
            id=`show${firstName}Dialog`
            class="underline text-brand-green hover:text-brand-green-dark"
            >is hier te vinden</button>.
        </p>
        <LinkButton url={member.appointmentURL} label=`Maak een afspraak bij ${member.firstName}` target="_blank"></LinkButton>

        <dialog id=`${firstName}Dialog` class="max-w-screen-md mx-auto rounded m-8 p-0">
    <div
      class="p-4 bg-white border-b border-slate-100 flex flex-row items-center"
    >
      <h3 class="font-bold grow">Opleidingen</h3>
      <button class="w-6 h-6" id=`close${firstName}Dialog`>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="size-6"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M6 18 18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
    <div class="overflow-y-auto" style={{ maxHeight: "80vh" }}>
      <div class="text-left px-4">
        <ul
          class="text-base py-4 grid sm:grid-cols-1 lg:grid-cols-2 gap-y-4 md:gap-x-4 md:items-stretch"
        >
          {
            mainCourseData
              .filter((course) => course.owner?.includes(`${firstName}`))
              .sort((a, b) => a.year - b.year)
              .map((course) => (
                <li class="block p-4 border border-slate-200 bg-slate-50 rounded">
                  <span class="block pb-2 font-medium">{course.title}</span>
                  <span class="block text-sm text-slate-500">
                    ({course.year}, {course.school})
                  </span>
                </li>
              ))
          }
        </ul>
      </div>
    </div>
  </dialog>
      </div>
    ))
}
  

<script define:vars={{firstName}}>
  const showButton = document.getElementById(`show${firstName}Dialog`);
  const closeButton = document.getElementById(`close${firstName}Dialog`);
  const dialog = document.getElementById(
    `${firstName}Dialog`
  );

  showButton?.addEventListener("click", () => {
    dialog?.showModal();
  });

  closeButton?.addEventListener("click", () => {
    dialog?.close();
  });
</script>
