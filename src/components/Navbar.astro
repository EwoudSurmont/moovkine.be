---
import Bars3 from "astro-heroicons/solid/Bars3.astro";
import XMark from "astro-heroicons/solid/XMark.astro";
import navData from "../data/navData";
import AppointmentDialog from "./AppointmentDialog.astro";
---

<header>
  <nav class="border-b p-6 bg-white z-50">
    <div
      class="lg:container lg:mx-auto flex items-center justify-between flex-wrap"
    >
      <div class="flex items-center flex-shrink-0 mr-6">
        <a href="/" aria-label="Go to home">
          <img
            src="/logo.svg"
            alt="Website logo"
            class="object-contain h-16"
            width="64"
            height="64"
          />
        </a>
      </div>

      <div class="block lg:hidden">
        <button
          aria-label="Toggle menu"
          aria-expanded="false"
          class="menu-btn flex items-center p-4 rounded text-white bg-brand-green hover:bg-brand-green-dark"
        >
          <Bars3 class="bars h-6" />
          <XMark class="xmark h-6 hidden" />
        </button>
      </div>

      <div
        class="menu w-full lg:flex lg:items-center lg:mt-0 lg:w-auto hidden"
        role="menubar"
      >
        <div class="text-sm border-b lg:border-0">
          {
            navData.map((page) => (
              <a
                rel="prefetch"
                class="block lg:inline-block lg:mt-0 bg-white lg:bg-transparent hover:text-brand-green-dark font-bold text-gray-800 lg:mr-8 mb-2 last:mb-4 lg:last:mb-0 lg:mb-0 px-6 rounded py-4 lg:p-0 navigation-link"
                data-navlink
                href={page.path}
                role="menuitem"
              >
                {page.name}
              </a>
            ))
          }
        </div>
        <div>
          <AppointmentDialog />
        </div>
      </div>
    </div>
  </nav>
</header>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const menuButton = document.querySelector(".menu-btn");
    const menu = document.querySelector(".menu");
    const bars = document.querySelector(".bars");
    const xmark = document.querySelector(".xmark");
    const navLinks = document.querySelectorAll("[data-navlink]");

    if (menuButton && menu && bars && xmark) {
      menuButton.addEventListener("click", () => {
        const isExpanded = menuButton.getAttribute("aria-expanded") === "true";
        menuButton.setAttribute("aria-expanded", (!isExpanded).toString());

        const toggleClasses = [
          "p-6",
          "mt-6",
          "lg:p-0",
          "bg-gray-100",
          "rounded",
          "lg:bg-white",
          "hidden",
        ];

        toggleClasses.forEach((cls) => {
          menu.classList.toggle(cls);
        });

        bars.classList.toggle("hidden");
        xmark.classList.toggle("hidden");
      });
    }

    // Current page highlighting
    navLinks.forEach((link) => {
      const href = link.getAttribute("href");
      if (href === window.location.pathname) {
        link.classList.replace("text-gray-800", "text-brand-green-dark");
        link.setAttribute("aria-current", "page");
      }
    });
  });
</script>

<style>
  /* Hover and focus states */
  .navigation-link:hover,
  .navigation-link:focus {
    @apply text-brand-green-dark;
  }
</style>
